#BlueJ class context
comment0.target=Search
comment1.params=
comment1.target=Search()
comment10.params=a
comment10.target=java.util.ArrayList\ inToArrayList(java.lang.String[])
comment10.text=\n\ This\ method\ simply\ transfers\ an\ String\ of\ arrays\ in\ to\n\ and\ ArrayList\ of\ Strings\ \n
comment11.params=list
comment11.target=java.util.ArrayList\ negationList(java.util.ArrayList)
comment11.text=\n\ This\ method\ returns\ all\ the\ negated\ words\ and\ removed\ from\n\ the\ list\ with\ all\ the\ words\ in\ it.\ \ \n
comment12.params=
comment12.target=void\ printOut()
comment12.text=\n\ This\ method\ prinouts\ all\ the\ Urls\ in\ my\ Priority\ Queue\ \n
comment13.params=check
comment13.target=boolean\ containsInDataBase(java.util.ArrayList)
comment13.text=\n\ This\ method\ checks\ if\ the\ words\ in\ the\ ArrayList\ is\ \n\ contained\ in\ my\ dataBase.\ \ \n
comment2.params=dataBase\ search
comment2.target=Search(java.util.TreeMap,\ java.lang.String)
comment3.params=readingLines
comment3.target=void\ readLines(java.lang.String)
comment3.text=\n\ This\ reads\ the\ lines.\ \ If\ it\ has\ a\ "and"\ connector\ it\ \n\ splits\ all\ the\ words\ with\ the\ "and"\ and\ finds\ all\ the\ Urls\n\ connected\ with\ it.\ \ \n\ Also\ it\ takes\ in\ the\ consideration\ of\ the\ negated\ words\ and\ at\ the\ end,\ \n\ adds\ all\ the\ Urls\ without\ the\ negated\ words\ Url\ into\ the\n\ Priority\ Queue\ of\ Urls.\ \ \n\ \n\ @param\ the\ lines\ it\ is\ reading\ \n
comment4.params=negationString
comment4.target=java.util.ArrayList\ negationUrl(java.util.ArrayList)
comment4.text=\n\ this\ returns\ all\ the\ urls\ in\ the\ negated\ Words.\ \n\ \n\ @Param\ all\ the\ words\ that\ were\ negated\ \n\ @reuturn\ urls\ of\ the\ negated\ words\ \n
comment5.params=negation\ andLine
comment5.target=java.util.ArrayList\ finalUrl(java.util.ArrayList,\ java.util.ArrayList)
comment5.text=\n\ This\ return\ the\ final\ urls\ without\ the\ negated\ word's\ Urls\ \n\ in\ it.\ \ \n\ \n\ @param\ negated\ word's\ Urls,\ and\ normal\ word's\ Urls\n\ @return\ final\ Urls\ without\ negated\ word's\ Urls\ \n
comment6.params=andLine
comment6.target=void\ addPriority(java.util.ArrayList)
comment6.text=\n\ Adds\ one\ everytime\ a\ word\ is\ found\ dealing\ with\ the\ "and"\n\ connectors.\ \ This\ allows\ so\ that\ if\ it\ "A\ and\ B\ and\ C",\ is\ inserterd\n\ the\ urls\ that\ his\ the\ most\ words\ will\ be\ prioritized\ higher\n\ \n\ @param\ the\ words\ connected\ with\ "and"\n
comment7.params=andLine
comment7.target=java.util.ArrayList\ readingAddLines(java.util.ArrayList)
comment7.text=\n\ This\ returns\ all\ of\ the\ urls\ from\ the\ words\ that\ are\ connected\ \n\ with\ "and".\n\ \n\ @param\ words\ that\ are\ not\ negated\ words\ \n\ @return\ urls\ from\ normal\ words\ \ \n
comment8.params=transfer
comment8.target=void\ inToPQ(java.util.ArrayList)
comment8.text=\n\ This\ method\ transters\ all\ the\ urls\ in\ to\ my\ priority\ queu\n\ \n\ @param\ the\ final\ urls\ will\ be\ entered\ in\ here\n
comment9.params=check\ variable
comment9.target=boolean\ contains(java.lang.String[],\ java.lang.String)
comment9.text=\n\ This\ method\ checks\ if\ a\ certain\ variable\ is\ in\ my\ \n\ array\ of\ Strings\n\ \n\ @param,\ the\ array\ of\ Strings\ to\ be\ checked\ and\ the\ variable\ \n
numComments=14
